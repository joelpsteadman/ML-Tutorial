from Graph import Graph
from Data import Data_Set
import numpy as np
import matplotlib.pyplot as plt

x_max = 100
y_max = 100
x_min = 0
y_min = 0

def fun(x, slope, intercept):
    return slope * x + intercept

def squared(x):
    return .01*(x**2)

x = np.linspace(x_min, x_max, x_max)

weights = [[-0.03167276781928811, 0.0251517377733135],[-0.031233699337881865, 0.0242500580963121],[-0.030357252751129535, 0.02432688305674699],[-0.03163664247429744, 0.024509151083179116],[-0.030648645808702423, 0.024313594421475557],[-0.030195278266162758, 0.02420381815135466],[-0.03112591025045961, 0.023974468703663203],[-0.031796848276986235, 0.024506316964339633],[-0.030505845897340934, 0.024022092439150617],[-0.03096260517756573, 0.023817817137821655],[-0.03044404694175937, 0.024404200235219498],[-0.03251172675565353, 0.025839954943016503],[-0.03369517042217184, 0.026836825993219182],[-0.030673542203960392, 0.024328414085886273],[-0.03310797633077212, 0.026353812121901743],[-0.030696635001103357, 0.024637390602627686],[-0.03234627034129504, 0.024927143922698045],[-0.03190807933494728, 0.02478290058286073],[-0.03412756438296249, 0.027228485791059583],[-0.03096434523782708, 0.024840791515959044],[-0.03325633560618006, 0.026579388682944585],[-0.03191190582014422, 0.024580557116885626],[-0.031000465361579174, 0.023836345631322003],[-0.03254793500716111, 0.02516623369422267],[-0.03340157905726891, 0.02607245930516635],[-0.03131915841550486, 0.024154488021389427],[-0.030724088426344404, 0.02460290904875908],[-0.03041669392433403, 0.02450424462762192],[-0.03064640108029625, 0.024574138013350455],[-0.03061304855999725, 0.024668668338355737],[-0.032832279799301825, 0.025343466613276626],[-0.030271754094345835, 0.023960361245176795],[-0.031289168470299125, 0.024156669217055355],[-0.030657897643665305, 0.024294559358891136],[-0.031378007313993934, 0.025207905949310605],[-0.03130325372018905, 0.02407128973012842],[-0.03240074833721785, 0.024937499068536047],[-0.030299276368540566, 0.024055072297044535],[-0.03415087275709432, 0.026348640521329562],[-0.032667605141483175, 0.025971008018269355],[-0.03152390271501615, 0.024296313135525865],[-0.03095635826342604, 0.023887602856776317],[-0.03412531279086535, 0.026393856807934997],[-0.031686950105624945, 0.024336044862458522],[-0.030754008654981898, 0.024663350942411084],[-0.03029747205875826, 0.024299630061815427],[-0.03233611869943923, 0.025537698691970825],[-0.031240956095412505, 0.024094220925450428],[-0.030744942719229007, 0.024256256958295478],[-0.03310271338708103, 0.025699513469588545],[-0.03104807782747114, 0.024015537841328673],[-0.031217929393072434, 0.024081625927451323],[-0.030991242477834476, 0.023789332546196144],[-0.032770748622584514, 0.025363859479569116],[-0.033666359349486814, 0.02616519558402462],[-0.03170279535909734, 0.025458731556539653],[-0.0315167083180264, 0.02528965252518695],[-0.03418290061159103, 0.026700766906392],[-0.031141260501310886, 0.024749695898085372],[-0.031387859748818275, 0.024363203224467705],[-0.03170605404369287, 0.02446334247041606],[-0.0334023818296004, 0.025879120328753613],[-0.030782867457229572, 0.0242881210162435],[-0.033564545493821485, 0.026008216208421725],[-0.03082186018678372, 0.02370304622369921],[-0.031206522546157106, 0.02401318737263641],[-0.030418228892959857, 0.023950509627917508],[-0.03284684759420868, 0.025422892534943453],[-0.030397880804509746, 0.024107830795947943],[-0.031123554848907595, 0.023891518496535143],[-0.0325869629299439, 0.025308179944073115],[-0.030378656273421737, 0.02441425646709883],[-0.03205081520512326, 0.025742295653347867],[-0.031149467197510085, 0.024714494618766073],[-0.03060448369825735, 0.024083733282564978],[-0.030634037661283166, 0.024298253002085317],[-0.03231487285386377, 0.02490908768076938],[-0.030450748097506093, 0.024153056010315886],[-0.031019578873947407, 0.024618886531901703],[-0.030666652429908115, 0.02435034223748297],[-0.031788607387433686, 0.02446646800034809],[-0.03196577116249564, 0.024645077916245817],[-0.033453948318715954, 0.026581887265917863],[-0.03150912096540169, 0.024285710064222664],[-0.031624401437157286, 0.025421025135663432],[-0.03022922059177483, 0.023914303157108425],[-0.030415930488041042, 0.024066255468583007],[-0.033089083318248697, 0.02583243919919923],[-0.030951353416891453, 0.02448191193608306],[-0.0339211498849984, 0.027100556518999775],[-0.033702720386877175, 0.02611681757362712],[-0.03240128687043509, 0.024927955649160803],[-0.032516237545741684, 0.025131991915817282],[-0.033683770560850104, 0.026294628580511865],[-0.031434191073913535, 0.02527316881340857],[-0.031093776965790944, 0.02496090268515437],[-0.03147562757797371, 0.02529084328091913],[-0.033049276220368046, 0.02627046620564577],[-0.03112533708436279, 0.024028586901105112],[-0.0323671155358217, 0.025560604066028024]]
biases = [0.8665600000006073, 0.8438700000007106, 0.8379100000007377, 0.8596800000006386, 0.842020000000719, 0.8332700000007588, 0.8446800000007069, 0.8552400000006588, 0.837170000000741, 0.8410700000007233, 0.8400200000007281, 0.8835700000005299, 0.9309200000003144, 0.8425300000007167, 0.9148900000003873, 0.8446900000007068, 0.8712600000005859, 0.8626500000006251, 0.9401400000002724, 0.8545100000006621, 0.9086700000004156, 0.8669900000006053, 0.8493500000006856, 0.8808000000005425, 0.9027100000004428, 0.8457800000007019, 0.8482500000006906, 0.8319600000007648, 0.8450200000007053, 0.8375900000007391, 0.8913700000004944, 0.829720000000775, 0.8379400000007375, 0.8391800000007319, 0.8614300000006306, 0.8501300000006821, 0.8807100000005429, 0.8307500000007703, 0.9269600000003324, 0.8878000000005106, 0.8485500000006893, 0.8355900000007482, 0.9226900000003518, 0.86158000000063, 0.8445900000007073, 0.837620000000739, 0.8886900000005066, 0.838050000000737, 0.8423100000007177, 0.8958000000004742, 0.8431300000007139, 0.8371100000007413, 0.840910000000724, 0.8849400000005236, 0.9162300000003812, 0.8688400000005969, 0.8645600000006164, 0.9247100000003426, 0.8480700000006914, 0.8481300000006912, 0.854310000000663, 0.9034600000004394, 0.843560000000712, 0.9077800000004197, 0.8374700000007397, 0.8410600000007233, 0.834540000000753, 0.886850000000515, 0.8316200000007663, 0.8427100000007158, 0.8840900000005275, 0.8333500000007584, 0.8788600000005513, 0.8482800000006905, 0.8410100000007236, 0.8418300000007198, 0.8775400000005573, 0.8326200000007618, 0.8465900000006982, 0.840040000000728, 0.8577100000006476, 0.8650600000006141, 0.9105200000004072, 0.8516600000006751, 0.8663100000006084, 0.8265000000007896, 0.8400600000007279, 0.893220000000486, 0.843780000000711, 0.9302400000003175, 0.9086300000004158, 0.8808100000005424, 0.882440000000535, 0.9105200000004072, 0.8619300000006284, 0.8553500000006583, 0.8649300000006147, 0.8986300000004613, 0.8386900000007341, 0.8891800000005043]
for weight, bias in zip(weights, biases):
    x_weight = weight[0]
    y_weight = weight[1]
    m = round(-x_weight/y_weight, 2)
    b = round(-bias/y_weight, 2)
    # print("Weights: ", weight)
    # print("Bias: ", bias)
    # print("m = ", m)
    # print("b = ", b)
    print("y = ", m, "x", " + ", b)
    # print()


    y = fun(x, m, b)

    plt.plot(x, y, color='black')

    y = squared(x)

    plt.plot(x, y, color='green')


plt.show()

